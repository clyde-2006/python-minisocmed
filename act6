class User:  
    def __init__(self):
        self.accounts = {}  
        self.current_user = None
        self.public_post = {}

    def notify(self, message):
        print("  " + message + "  \n")

    def register(self):
        print("\n--- Register ---")
        username = input("Enter username: ")
        password = input("Enter password: ")

        if username in self.accounts:
            self.notify("Username already exists.")
        else:
            user_id = len(self.accounts) + 1
            self.accounts[username] = {
                "user_id": user_id,
                "password": password,
                "post": [],
            }
            self.public_post[username] = {
                "user_id": user_id,
                "username": username,
                "pub_post": [],
            }
            self.notify("Registration successful.")
        
        ## 
        # print(self.public_post)
        # print(self.accounts)
        
    def login(self):
        print("\n--- Login ---")
        username = input("Enter username: ")
        password = input("Enter password: ")

        if username in self.accounts and self.accounts[username]["password"] == password:
            self.current_user = username
            self.notify(f"Welcome, {username}!")
            return True
        elif username in self.accounts:
            self.notify("Wrong password.")
        else:
            self.notify("User not found.")
        return False

    def change_password(self):
        if not self.current_user:
            self.notify("No user logged in.")
            return

        print("\n--- Change Password ---")
        new_password = input("Enter new password: ")
        self.accounts[self.current_user]["password"] = new_password
        self.notify("Password changed successfully. Returning to main menu...")

        # Force logout and go back to main menu
        self.current_user = None


class Poster(User):
    def __init__(self):
        super().__init__()   

    def post(self):
        print("\n--- Create a Post ---")
        post = input("Enter post: ")
        num_post = len(self.public_post[self.current_user]["pub_post"]) + 1
        self.accounts[self.current_user]["post"].append({"num_post": num_post,"post": post, "likes": 0, "comments": []})
        self.public_post[self.current_user]["pub_post"].append({"num_post": num_post, "post": post, "likes": 0, "comments": []})
        self.notify("Post created.")

        ##
        # print(self.accounts)
        # print(self.public_post)
       
    def display(self):
        for names in self.public_post:
            user_id = self.public_post[names]
            print(f"[{user_id['user_id']}] {names}'s posts:")
            
            if not self.public_post[names]["pub_post"]:
                print(f"---{names} has not yet posted anything.---")
            else:
                for posts in self.public_post[names]["pub_post"]:
                    print(f" [{posts['num_post']}] post: {posts['post']} (likes: {posts['likes']})")
                    print("    comments:")
                    if not posts["comments"]:
                        print("     - No comments yet.")
                    else:
                        for comments in posts["comments"]:
                            print(f"     - {comments}")
            print() #printing a new line
        
class Liker(Poster):
    def __init__(self):
        super().__init__()

    def likes(self):
        print("\n-----Like a Post-----")
        
        self.display()
        
        for check_likes in self.public_post:
            if not self.public_post[check_likes]["pub_post"]:
                self.notify("    Can't like a post yet.")
            else:
                user_num = input("Select User number: ")
                for names in self.public_post:     
                    if user_num == str(self.public_post[names]["user_id"]):
                        post_num = input("Select Post number: ")
                        for user_post in self.public_post[names]["pub_post"]:
                            if post_num == str(user_post["num_post"]):
                                user_post["likes"] += 1
                                self.notify("Post Liked!")
                                return
                        else:
                            self.notify("Invalid Post number")
                        return
                else:
                    self.notify("Invalid User number")
                    return
class Comments(User):
    def __init__(self):
        super().__init__() 
    
    def comments(self):
        print("\n-----Add a Comment-----")
        
        self.display()
        
        for check_comments in self.public_post:
            if not self.public_post[check_comments]["pub_post"]:
                self.notify("    Can't comment yet.")
            else:
                user_num = input("Select User number: ")
                for names in self.public_post:     
                    if user_num == str(self.public_post[names]["user_id"]):
                        post_num = input("Select Post number: ")
                        for user_post in self.public_post[names]["pub_post"]:
                            if post_num == str(user_post["num_post"]):
                                user_comment = str(input("Enter your comment: "))
                                comment_text = f"{user_comment} (from {self.current_user})"
                                user_post["comments"].append(comment_text)
                                self.notify("Post Commented!")
                                return
                        else:
                            self.notify("Invalid Post number")
                        return
                else:
                    self.notify("Invalid User number")
                    return


class SocialUser(Liker, Comments):
    def __init__(self):
        super().__init__()
        
    def view_post(self):
        print("\n-----Viewing Posts----")
        
        self.display()


class mainFunction(SocialUser):  
    def __init__(self):
        super().__init__()
    
    def user_menu(self):
        while True:
            print("\n--- Account Menu ---")
            print("[1] Create Post")
            print("[2] View Posts")
            print("[3] Like a post")
            print("[4] Add Comment")
            print("[5] Change Password")
            print("[6] Logout")

            choice = input("Choose number: ")

            if choice == "1":
                self.post()
            elif choice == "2":
                self.view_post()
            elif choice == "3":
                self.likes()
            elif choice == "4":
                self.comments()
            elif choice == "5":
                self.change_password()
                if not self.current_user:  # if password change logs out user
                    break
            elif choice == "6":
                self.notify("Logging out...")
                self.current_user = None
                break
            else:
                self.notify("Invalid choice.")

    def main(self):
        while True:
            print("\n--- Main Menu ---")
            print("[1] Register")
            print("[2] Login")
            print("[3] Exit")

            choice = input("Choose number: ")

            if choice == "1":
                self.register()
            elif choice == "2":
                if self.login():
                    self.user_menu()
            elif choice == "3":
                self.notify("Goodbye!")
                break
            else:
                self.notify("Invalid choice.")


system = mainFunction()
system.main()